dependencies:
  pre:
    # workaround for "failed to find Build Tools revision 23.0.2"
    # https://discuss.circleci.com/t/android-build-tools-23-0-2-not-available/455/3
    - echo y | android update sdk --no-ui --all --filter tool,extra-android-m2repository,extra-android-support,extra-google-google_play_services,extra-google-m2repository,android-23
    - echo y | android update sdk --no-ui --all --filter build-tools-23.0.2

test:
  pre:
    # start emulator for instrumentation tests
    - emulator -avd circleci-android21 -no-audio -no-window:
        background: true

  override:
    # pre build code to see how many time each task realy need
    - ./gradlew :library:assembleDebug
    - ./gradlew :library:assembleDebugAndroidTest

    # ensure that the emulator is ready to use
    - circle-android wait-for-boot

    # the necessary sleep duration may change with time and depends on the pre tasks length.
    # When all pre tasks are run long enough then waiting will not be necessary anymore.
    # This sleep should avoid the com.android.builder.testing.api.DeviceException: com.android.ddmlib.ShellCommandUnresponsiveException
    - sleep 60

    # remove the look screen
    - adb shell input keyevent 82

    # clear logs from emulator
    - adb logcat -c

    # start instrumentation tests on emulator
    # -i is used to see current test execution progress
    - ./gradlew :library:connectedCheck -i

  post:
    # collect logs from emulator and make them accessable
    - adb logcat -d > $CIRCLE_ARTIFACTS/logcat_emulator.txt

    # collect html test results and make them accessable
    - mv library/build/reports/androidTests/connected $CIRCLE_TEST_REPORTS/library_android_tests

    # collect test coverage results and make them accessable
    - mv library/build/reports/coverage/debug $CIRCLE_TEST_REPORTS/library_android_tests_coverage

    # collect xml test results for circle ci to analyze them
    - mkdir -p $CIRCLE_TEST_REPORTS/library_android_tests_xml/
    - find . -type f -regex ".*/build/outputs/androidTest-results/.*xml" -exec cp {} $CIRCLE_TEST_REPORTS/library_android_tests_xml/ \;

deployment:
  coverage:
    branch: [master]
    commands:
      - bash <(curl -s https://codecov.io/bash)
