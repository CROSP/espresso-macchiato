buildscript {
    dependencies {
        classpath 'com.novoda:bintray-release:0.3.4'
        classpath 'ch.raffael.pegdown-doclet:pegdown-doclet:1.3'
    }
}

plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.3.4'
    id "co.riiid.gradle" version "0.4.2"
}
apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'
apply plugin: 'ch.raffael.pegdown-doclet'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        // v8 ist lowest min sdk which supported by espresso
        minSdkVersion 8
        targetSdkVersion 23

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // support code coverage for testing
            testCoverageEnabled = true
        }
    }
    lintOptions {
        // ignore InvalidPackage for JUnit, this library will only be a test dependency
        disable 'InvalidPackage'
    }
}

dependencies {
    compile 'com.android.support.test.espresso:espresso-contrib:2.2.2'
    compile 'com.android.support.test.espresso:espresso-intents:2.2.2'
    // real uiautomator is not available inside Android Studio when used as compile dependency
    provided project(':uiautomator-noop')

    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
}

// Original see: http://ryanharter.com/blog/2013/07/30/automatic-versioning-with-git-and-gradle/
def currentReleaseTag = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--match', 'release*'
        standardOutput = stdout
        ignoreExitValue = true
    }
    def releaseTag = stdout.toString().trim()
    return releaseTag ? releaseTag : "release-0.0.0"
}

// plugin configuration to publish release artifacts to bintray
publish {
    groupId = 'de.nenick'
    artifactId = 'espresso-macchiato'
    publishVersion = currentReleaseTag().replace("release-", "")
    desc = 'Oh hi, this is a nice description for a project, right?'
    website = 'https://github.com/nenick/espresso-macchiato'
    licences = ['AML'] // AML = MIT license http://spdx.org/licenses/
    autoPublish = true
}

// plugin configuration to create release tag and push to github
scmVersion {
    tag {
        prefix = 'release'
    }
}

// plugin configuration to publish release artifacts to github
github {
    //noinspection GroovyAssignabilityCheck
    owner = project.hasProperty("githubUser") ? project.property("githubUser") : "undefined"
    repo = 'espresso-macchiato'
    token = project.hasProperty("githubKey") ? project.property("githubKey") : "undefined"
    tagName = currentReleaseTag()
    targetCommitish = 'master'
    name = currentReleaseTag()
    body = new File(projectDir, '../RELEASE_NOTES.md').text
    assets = ['espresso-macchiato/build/outputs/aar/espresso-macchiato-release.aar']
}

apply from: "build.connectedCheckCustomized.gradle"